Redis 集合(Set):Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。(插入重复元素，只显示一个)。Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。

Redis 有序集合(sorted set):Redis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。有序集合的成员是唯一的,但分数(score)却可以重复。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。

如何使用RedisTemplate访问Redis数据结构之Zset:Redis 有序集合和无序集合一样也是string类型元素的集合,且不允许重复的成员。
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
有序集合的成员是唯一的,但分数(score)却可以重复。
public interface ZSetOperations<K,V>
ZSetOperations提供了一系列方法对有序集合进行操作：

Boolean add(K key, V value, double score);新增一个有序集合，存在的话为false，不存在的话为true  template.opsForZSet().add("zset1","zset-1",1.0)

Long add(K key, Set<TypedTuple<V>> tuples);新增一个有序集合
Long remove(K key, Object... values);从有序集合中移除一个或者多个元素
Double incrementScore(K key, V value, double delta);增加元素的score值，并返回增加后的值
Long rank(K key, Object o);返回有序集中指定成员的排名，其中有序集成员按分数值递增(从小到大)顺序排列














